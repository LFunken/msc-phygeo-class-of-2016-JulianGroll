library(raster)
library(rgdal)
library(tools)


rs_base <- "D:/Dokumente/Studium/Master_Marburg/Semester_1/Remote_Sensing/"
path_data_rs <- paste0(rs_base, "data/")
path_original_rs <- paste0(path_data_rs, "original/")

path_aerial_rs <- paste0(path_original_rs, "aerial/")
path_lidar_rs <- paste0(path_original_rs, "lidar/")
path_aerial_croped_rs <- paste0(path_data_rs, "aerial_croped/")
path_temp <- paste0(rs_base, "temp/")

rasterOptions(tmpdir = path_temp)

setwd("D:/Dokumente/Studium/Master_Marburg/Semester_1/Remote_Sensing/data/original/aerial/")
# Rasterkacheln einlesen 

s1 <- stack(paste0(path_aerial_rs, "474000_5632000.tif"))

s2 <- stack(paste0(path_aerial_rs, "474000_5630000.tif"))

s3 <- stack(paste0(path_aerial_rs, "476000_5632000.tif"))

s4 <- stack(paste0(path_aerial_rs, "476000_5630000.tif"))

s5 <- stack(paste0(path_aerial_rs, "478000_5632000.tif"))

s6 <- stack(paste0(path_aerial_rs, "478000_5630000.tif"))


gv_1 <- (s1[10000, ])

gv_2 <- (s2[1, ])

mean_gv_1 <- mean(gv_1)

mean_gv_2 <- mean(gv_2)

diff1_2 <- mean_gv_1-mean_gv_2

diff1_2

if ((diff1_2>(-1)) &
    (diff1_2<1)){
  print("Match")
} else  {
  print("No_Match")
}



setwd("D:/Dokumente/Studium/Master_Marburg/Semester_1/Remote_Sensing/data/original/aerial/")

# List of all filenams 

aerial_files <- list("474000_5630000.tif", "474000_5632000.tif", "476000_5630000.tif", "476000_5632000.tif", "478000_5630000.tif", "478000_5632000.tif")

ngb_aerials <- function(aerial_files, step = 2000){
  
  ngb_files <- lapply(aerial_files, function(y){
    
    # Get names without path to compare names although path might be different
    act_ext <- file_ext(y)
    fnames <- aerial_files
    
    a <- xmin(y)
    b <- ymin(y)
    # Get x and y coordinates of actual file from filename
    act_file_x <- a
    act_file_y <- b
    
    # Set neighbours starting from north with clockwise rotation (N, E, S, W)
    pot_ngb <- c(paste0(act_file_x, "_", act_file_y + step, ".", act_ext),
                 paste0(act_file_x + step, "_", act_file_y, ".", act_ext),
                 paste0(act_file_x, "_", act_file_y - step, ".", act_ext),
                 paste0(act_file_x - step, "_", act_file_y, ".", act_ext))
    
    # Check if neighburs exist and create vector with full filepath
    act_ngb <- sapply(pot_ngb, function(f){
      pos <- grep(f, fnames)
      if(length(pos) > 0){
        return(aerial_files[pos])
      } else {
        return(NA)
      }
    })
    return(act_ngb)
  })
  
  names(ngb_files) <- aerial_files
  return(ngb_files)
  
}


# Ausgabe der Nachbarschaftsbeziehungen

neighbours <- ngb_aerials(aerial_files)

neighbours














