library(raster)
library(glcm)
# initialise the script and save all filepaths in a list
source("D:/Dokumente/Studium/Master_Marburg/msc-phygeo-class-of-2016-JulianGroll/fun/Init.R")
path <- Init("gi", "04")
plains <- raster(paste0(path$rs$saga, "class_plain.tif"))
plot(plains)
abc <- paste0(path$fun, "fun_ngb_aerials.R")
abc
ngb_aerials
# glcm mean to get rid of some artefacts
plains_mean <- glcm(plains, statistics = c("mean"), window = c(11,11))
plot(plains_mean)
# reclassify all values from 0.7 to 1 as 1
plains_reclass <- reclassify(plains_mean, matrix(c(0.7,1,1)))
plot(plains_reclass)
# gi-ws-04-1 plain plateau reloaded
#
# using system() to operate the SAGA Shell
# initialise the script and save all filepaths in a list
source("D:/Dokumente/Studium/Master_Marburg/msc-phygeo-class-of-2016-JulianGroll/fun/Init.R")
path <- Init("gi", "04")
system(saga_cmd ta_morphometry 0)
library(raster)
library(glcm)
# initialise the script and save all filepaths in a list
source("D:/Dokumente/Studium/Master_Marburg/msc-phygeo-class-of-2016-JulianGroll/fun/Init.R")
path <- Init("gi", "04")
system("saga_cmd ta_morphometry 21")
source(path$fun, "func_splitplace.R")
source(path$fun, "func_splitplace.R")
split_places
# gi-ws-04-1 plain plateau reloaded
#
# using system() to operate the SAGA Shell
# initialise the script and save all filepaths in a list
source("D:/Dokumente/Studium/Master_Marburg/msc-phygeo-class-of-2016-JulianGroll/fun/Init.R")
path <- Init("gi", "04")
path
library(rgdal)
library(gdalUtils)
if (!require(rgdal)){install.packages("rgdal")}
if (!require(raster)){install.packages("raster")}
install.packages("gdalUtils")
# check for a valid GDAL installation somewhere on the system
gdal_setInstallation()
valid.install<-!is.null(getOption("gdalUtils_gdalPath"))
print(valid.install)
# load gdalUtils
library(gdalUtils)
source("D:/Dokumente/Studium/Master_Marburg/msc-phygeo-class-of-2016-JulianGroll/fun/Init.R")
path <- Init("gi", "04")
library(gdalUtils)
if (!require(rgdal)){install.packages("rgdal")}
if (!require(raster)){install.packages("raster")}
install.packages("gdalUtils")
# check for a valid GDAL installation somewhere on the system
gdal_setInstallation()
valid.install<-!is.null(getOption("gdalUtils_gdalPath"))
print(valid.install)
# load gdalUtils
source("D:/Dokumente/Studium/Master_Marburg/msc-phygeo-class-of-2016-JulianGroll/fun/Init.R")
path <- Init("gi", "04")
library(gdalUtils)
if (!require(rgdal)){install.packages("rgdal")}
if (!require(raster)){install.packages("raster")}
install.packages("gdalUtils")
# check for a valid GDAL installation somewhere on the system
gdal_setInstallation()
valid.install<-!is.null(getOption("gdalUtils_gdalPath"))
print(valid.install)
# load gdalUtils
